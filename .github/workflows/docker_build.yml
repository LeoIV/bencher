name: Docker Build

on: [ push ]

env:
  TEST_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/bencher:test
  LATEST_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/bencher:latest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: bencher

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: pip cache for docker
        uses: actions/cache@v3
        with:
          path: pip-build-cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}

      - name: poetry cache for docker
        uses: actions/cache@v3
        with:
          path: poetry-build-cache
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}

      - name: inject poetry cache
        uses: reproducible-containers/buildkit-cache-dance@v2.1.2
        with:
          cache-source: poetry-build-cache
          cache-target: /root/.cache/pypoetry

      - name: inject pip cache
        uses: reproducible-containers/buildkit-cache-dance@v2.1.2
        with:
          cache-source: pip-build-cache
          cache-target: /root/.cache/pip

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: bencher
          load: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            CACHEBUST=${{ github.sha }}

      - name: Run Docker container
        run: |
          cd bencher
          docker run -d -p 50051:50051 --rm ${{ env.TEST_TAG }}

      - name: Checkout bencherclient code
        uses: actions/checkout@v4
        with:
          repository: 'LeoIV/bencherclient'
          ref: 'master'
          token: ${{ secrets.BENCHERCLIENT_PAT }}
          path: bencherclient

      - name: Checkout python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        run: |
          cd bencherclient
          poetry install --with dev --no-root

      - name: Run bencherclient
        run: |
          cd bencherclient
          poetry run python3 run_all_benchmarks.py

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: bencher
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.LATEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            CACHEBUST=${{ github.sha }}

